# ==============================================================================
# Docker Compose configuration for Easy Web GPG
# ==============================================================================

version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: easy-web-gpg-app
    ports:
      - "8080:8080"
    environment:
      - MASTER_KEY=${MASTER_KEY:-your-master-key-here}
      - ENV=development
    volumes:
      # Mount database directory for persistence
      - ./data:/data
      # Mount templates for hot reloading in development
      - ./templates:/templates:ro
      # Mount static assets
      - ./static:/static:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/time"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - easy-web-gpg-network

  # Development service with volume mounts for live development
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: go_builder
    container_name: easy-web-gpg-dev
    ports:
      - "8080:8080"
    environment:
      - MASTER_KEY=${MASTER_KEY:-dev-master-key}
      - ENV=development
      - CGO_ENABLED=0
    volumes:
      # Mount source code for live development
      - ./:/src
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    working_dir: /src
    command: ["go", "run", "./cmd/easywebgpg"]
    restart: unless-stopped
    networks:
      - easy-web-gpg-network
    profiles:
      - dev

  # CSS builder service for development
  css-watch:
    image: node:20-alpine
    container_name: easy-web-gpg-css
    working_dir: /app
    volumes:
      - ./:/app
      - node-modules-cache:/app/node_modules
    command: ["npm", "run", "watch:css"]
    restart: unless-stopped
    networks:
      - easy-web-gpg-network
    profiles:
      - dev

# Named volumes for caching
volumes:
  go-mod-cache:
    driver: local
  go-build-cache:
    driver: local
  node-modules-cache:
    driver: local

# Network configuration
networks:
  easy-web-gpg-network:
    driver: bridge
    name: easy-web-gpg-network
