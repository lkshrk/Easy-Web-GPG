name: CI - Test, Build and Release

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Regenerate screenshot (live render)
        run: |
          set -e
          # Install chromium for headless screenshots
          sudo apt-get update -y
          sudo apt-get install -y chromium-browser --no-install-recommends >/dev/null

          # Build CSS and binary
          make css
          make build

          # Run the server in background on port 8080
          MASTER_PASSWORD="" PORT=8080 ./bin/easy-web-gpg &> /tmp/webgpg.log &
          PID=$!
          # Give server time to boot
          sleep 2

          # Use headless chromium to screenshot (window size 1200x800)
          CHROME="/usr/bin/chromium-browser"
          if [ ! -x "$CHROME" ]; then
            CHROME="$(which chromium || which chromium-browser || true)"
          fi
          if [ -z "$CHROME" ]; then
            echo "chromium not found; falling back to SVG conversion"
            sudo apt-get install -y librsvg2-bin >/dev/null
            rsvg-convert -w 1200 -h 800 .github/screenshot.svg -o .github/screenshot.png || true
          else
            $CHROME --headless --disable-gpu --no-sandbox --window-size=1200,800               --screenshot=.github/screenshot.png "http://127.0.0.1:8080" || true
          fi

          # stop server
          kill $PID || true

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/screenshot.png || true
          TARGET_BRANCH="ci/screenshot"
          if git diff --staged --quiet; then
            echo "screenshot unchanged"
          else
            if [ "${GITHUB_EVENT_NAME}" != "pull_request" ]; then
              git commit -m "ci: regenerate screenshot"
              git push --force-with-lease origin "HEAD:${TARGET_BRANCH}"
            else
              echo "Pull request build; not pushing screenshot changes"
            fi
          fi


      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: make install-deps

      - name: Build CSS
        run: make css

      - name: Run quality checks
        run: make check

      - name: Run smoke test
        run: make smoke

      - name: Set image tags
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "DOCKER_TAGS=ghcr.io/lkshrk/easy-web-gpg:${TAG},ghcr.io/lkshrk/easy-web-gpg:latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAGS=ghcr.io/lkshrk/easy-web-gpg:latest,ghcr.io/lkshrk/easy-web-gpg:${GITHUB_SHA}" >> $GITHUB_ENV
          fi

      - name: Log in to Container Registry
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.DOCKER_TAGS }}

      - name: Push container image (GHCR)
        if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_TAGS }}
